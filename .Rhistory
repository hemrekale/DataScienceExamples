def <- defData( varname = "g1", dist = "gamma", formula = "4", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "4", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "4", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "4", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "4", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "4", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "4", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "4", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "4", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "4", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "4", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "4", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "4", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "4", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
# X<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 0.5, link = "identity")
dtstudy <- genData(10000, def)
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
hist(Y, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
hist(Y, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "36", variance = 0.5, link = "identity")
dtstudy <- genData(10000, def)
Y<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
hist(Y, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = "6", variance = 1, link = "identity")
dtstudy <- genData(10000, def)
Y<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
hist(Y, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = 6, variance = 16, link = "identity")
dtstudy <- genData(10000, def)
Y<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
hist(Y, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = 36, variance = 1, link = "identity")
dtstudy <- genData(10000, def)
Y<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
hist(Y, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = 36, variance = 12, link = "identity")
dtstudy <- genData(10000, def)
Y<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
hist(Y, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = 36, variance = 0.01, link = "identity")
dtstudy <- genData(10000, def)
Y<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
hist(Y, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(X, adjust=2), lty="dotted", col="darkgreen", lwd=2)
nrep = 10000;
X<-matrix(rgamma(10000,36,0.5),10000,1,byrow=T)
def <- defData( varname = "g1", dist = "gamma", formula = 36, variance = 0.01, link = "identity")
dtstudy <- genData(10000, def)
Y<-dtstudy$g1
hist(X, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
hist(Y, prob=TRUE, col="grey",100,    main = paste("Gamma," , "(shape = 36, rate = 0.5)"))# prob=TRUE for probabilities not counts
#lines(density(X), col="blue", lwd=2) # add a density estimate with defaults
lines(density(Y, adjust=2), lty="dotted", col="darkgreen", lwd=2)
def <- defData( varname = "g1", dist = "gamma", formula = 36,36, variance = 0.01, link = "identity")
def <- defData( varname = "g1", dist = "gamma", formula = 36;36, variance = 0.01, link = "identity")
def <- defData( varname = "g1", dist = "gamma", formula = c(36,36), variance = 0.01, link = "identity")
dtstudy <- genData(10000, def)
View(dtstudy)
def <- defData( varname = c("g1","g2"), dist = "gamma", formula = c(36,36), variance = 0.01, link = "identity")
dtstudy <- genData(10000, def)
Y<-dtstudy$g1
View(dtstudy)
library(bioconductor)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
BiocManager::install(version = "3.12")
library(bioconductor)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
q()_
q()
.libPaths()
BiocManager::install('biocLite')
install.packages("pathview",repos="http://R-Forge.R-project.org")
install.packages(pkgs = c('KEGGgraph', 'org.Hs.eg.db', 'Rgraphviz', 'graph', 'png', 'AnnotationDbi', 'KEGGREST' ))
install.packages("pathview",repos="http://R-Forge.R-project.org")
install.packages(pkgs = c('KEGGgraph', 'org.Hs.eg.db', 'Rgraphviz', 'graph', 'png', 'AnnotationDbi', 'KEGGREST' ))
BiocManager::install('ChIPseeker')
install.packages(pkgs = 'xml2')
BiocManager::install('ChIPseeker')
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(rtracklayer)
library("org.Hs.eg.db")
install.packages("org.Hs.eg.db")
BiocManager::install("org.Hs.eg.db")
source('~/fMRI/DataScience/BioInfo/installBioConductor.R', echo=TRUE)
install.packages(pkgs = to_install)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
library("org.Hs.eg.db")
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(ChIPseeker)
library("org.Hs.eg.db")
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
install.packages("pathview",repos="http://R-Forge.R-project.org")
YAP1<- import("YAP1_peaks.bed", format = "BED")
library(rtracklayer)
YAP1<- import("YAP1_peaks.bed", format = "BED")
unclass(as.Date("1971-01-01"))
unclass(as.Date("1971-01-02"))
unclass(as.Date("1971-01-01"))
unclass(as.Date("1971-12-31"))
unclass(as.Date("1970-12-31"))
unclass(as.Date("1970-01-01"))
2*3/23
apply(seq(1, 100),exp)
apply(seq(1, 100),FUN = exp)
apply(seq(1, 100),FUN = **)
apply(seq(1, 100),FUN = **2)
apply(seq(1, 100),FUN = function(x) x^2)
apply(seq(1, 100),FUN = function(x) return x^2)
apply(seq(1, 100),FUN = function(x) x)
apply(1:100,FUN = function(x) x)
apply(1:100, FUN = function(x) x^2)
apply(1:100, FUN = function(x) return(x^)2)
apply(1:100, FUN = function(x) return(x^2))
1:100
sapply(list(1:100), FUN = function(x) return(x^2))
a <- sapply(list(1:100), FUN = function(x) return(x^2))
a
plot(a)
a <- sapply(list(1:100), FUN = function(x) return(5*x^3 + 3*x^2))
plot(a)
a <- sapply(list(1:100), FUN = function(x) return(5*x^3 - 3*x^2))
plot(a)
a <- sapply(list(1:100), FUN = function(x) return(x^3 - 30*x^2))
plot(a)
a <- sapply(list(1:100), FUN = function(x) return(-x^3 + 30*x^2))
plot(a)
a <- apply(list(1:10), FUN = function(x) return(-x^3 + 30*x^2))
a <- sapply(list(1:100), FUN = function(x) return(-x^3 + 30*x^2))
a <- apply(list(1:100), FUN = function(x) return(-x^3 + 30*x^2))
a <- apply(list(1:100), FUN = function(x) return(-x^3 + 30*x^2),MARGIN = 1)
a <- apply(list(1:100), FUN = function(x) return(-x^3 + 30*x^2),MARGIN = 2)
a <- apply(list(1:100), FUN = function(x) return(-x^3 + 30*x^2),MARGIN = 1)
a <- apply(list(1:100), FUN = function(x) return(-x^3 + 30*x^2),MARGIN = 1)
dim(list(1:100))
dim(1:100)
dim([1:100])
dim(array(1:100))
a <- apply(array(1:100), FUN = function(x) return(-x^3 + 30*x^2),MARGIN = 1)
a
plot(a)
plot(x = 1:100, y = a)
plot(x = 1:100, y = a)
a
a <- apply(seq(from =0, to = 1,length.out = 100), FUN = function(x) return(-x^3 + 30*x^2),MARGIN = 1)
seq(from =0, to = 1,length.out = 100)
a <-sapply(seq(from =0, to = 1,length.out = 100), FUN = function(x) return(-x^3 + 30*x^2))
plot(a)
a <-sapply(seq(from =0, to = 10,length.out = 100), FUN = function(x) return(-x^3 + 30*x^2))
plot(a)
a <-sapply(seq(from =0, to = 100,length.out = 100), FUN = function(x) return(-x^3 + 30*x^2))
plot(a)
a <-sapply(seq(from =0, to = 20,length.out = 100), FUN = function(x) return(-x^3 + 30*x^2))
plot(a)
n
setwd('not bunlar yaw gordukce paylasiyorum ikimze de yarar diye')
setwd('~/fMRI/Codes_GH/DataScienceExamples')
